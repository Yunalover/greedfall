#CREDITS TO MAXIMUSPLUS (discord maximusplus) denimvalas@gmail.com
#enjoy!

# Load the XML file
$xmlFilePath = "C:\Users\YUNA\Desktop\GAMES\RANDO GREEDFALL\items_autogen_equipements.sli"
$xml = New-Object System.Xml.XmlDocument
$xml.Load($xmlFilePath)

$operatorDatabase = @{
   	"WEAPON_MAINHAND_DAMAGE_ELEM" = @{ Min = 1; Max = 360; ValueType = "Flat" }
   	"ITEM_TALENT_CHARISMA_ADD" = @{ Min = 1; Max = 2; ValueType = "Flat" }
   	"MAGIC_AID_LIFEADD" = @{ Min = 50; Max = 300; ValueType = "Flat" }
  	"MAGIC_EXPLOSION_DAMAGE" = @{ Min = 60; Max = 160; ValueType = "Flat" }
	"ITEM_TALENT_ALCHEMY_ADD" = @{ Min = 1; Max = 2; ValueType = "Flat" }
	"WEAPON_LIFEREGEN" = @{ Min = 1; Max = 26; ValueType = "Flat" }
	"WEAPON_OFFHAND_DAMAGE_ELEM" = @{ Min = 1; Max = 400; ValueType = "Flat" }
	"WEAPON_MAINHAND_AUTOPOISON_LEVEL" = @{ Min = 0.15; Max = 0.50; ValueType = "Structured" }
	"ITEM_TALENT_INTUITION_ADD" = @{ Min = 1; Max = 2; ValueType = "Flat" }
	"ITEM_TALENT_CRAFT_ADD" = @{ Min = 1; Max = 2; ValueType = "Flat" }
	"DEFENSE_ARMOR_PHY_MAX" = @{ Min = 12; Max = 128; ValueType = "Flat" }
	"POISON_ADD_PER_HIT" = @{ Min = 90; Max = 266; ValueType = "Flat" }
	"WEAPON_MANAREGEN" = @{ Min = 1; Max = 25; ValueType = "Flat" }
	"MAGIC_PROTECT_ARMORPHYREGEN_PERSEC" = @{ Min = 3; Max = 7; ValueType = "Flat" }
	"DEFENSE_ARMOR_ELEM_MAX" = @{ Min = 0.01; Max = 0.26; ValueType ="Structured"}
	"MAGIC_STASIS_DURATION" = @{ Min = 120; Max = 240; ValueType = "Flat" }
	"DEFENSE_ARMOR_MAGIC_MAX" = @{ Min = 0.01; Max = 0.26; ValueType = "Structured" }
 	"WEAPON_OFFHAND_INTERRUPT" = @{ Min = 26; Max = 126; ValueType = "Flat" }
	"WEAPON_OFFHAND_DESTROY" = @{ Min = 26; Max = 126; ValueType = "Flat" }
	"WEAPON_MAINHAND_DESTROY" = @{ Min = 26; Max = 126; ValueType = "Flat" }
	"WEAPON_MAINHAND_INTERRUPT" = @{ Min = 26; Max = 126; ValueType = "Flat" }
	"INTERRUPT_MAX" = @{ Min = 26; Max = 126; ValueType = "Flat" }
	"ITEM_TALENT_VIGOR_ADD" = @{ Min = 1; Max = 2; ValueType = "Flat" }
}


function RoundToTwoDecimalPlaces($value) {
    $roundedValue = [math]::Round($value, 2)
    return $roundedValue
}


function ApplyScaling($value, $equipmentQuality, $valueType) {
    if ($equipmentQuality -lt 1) {
        $equipmentQuality = 1
    } elseif ($equipmentQuality -gt 100) {
        $equipmentQuality = 100
    }

    $scaledValue = $value  # Initialize the scaled value

    if ($valueType -eq "Flat") {
        $scalingFactor = ($equipmentQuality - 1) / 99  # Calculate the scaling factor based on equipment quality
        $scaledValue = $scaledValue + ($scaledValue * $scalingFactor)

        # Ensure the scaled value is within the specified range
        $minValue = $operatorDatabase[$operator].Min
        $maxValue = $operatorDatabase[$operator].Max
        $scaledValue = [math]::Max($minValue, [math]::Min($maxValue, $scaledValue))

        # Round to full number
        $scaledValue = [math]::Round($scaledValue)
    } elseif ($valueType -eq "Structured") {
        if ($value -eq 0.01) {
            $scaledValue = $value * $equipmentQuality
        } elseif ($value -eq 0.1) {
            $scaledValue = $value * $equipmentQuality
        } elseif ($value -eq 0.4) {
            $scaledValue = $value * $equipmentQuality
        } else {
            $minValue = $value * ($equipmentQuality / 100)
            $maxValue = $value
            $minVariance = $minValue + ($maxValue - $minValue) * 0.15  # Define the variance as 15% of the value range
            $scaledValue = Get-Random -Minimum $minVariance -Maximum $maxValue
        }
    }

    return RoundToTwoDecimalPlaces $scaledValue
}





function AddRandomOperator($operationsNode, $usedOperators, $equipmentQuality) {
    $operator = $operatorDatabase.Keys | Get-Random
    if ($usedOperators.Contains($operator)) {
        return
    }

    $usedOperators.Add($operator) > $null

    $operatorData = $operatorDatabase[$operator]
    $value = Get-Random -Minimum $operatorData.Min -Maximum ($operatorData.Max + 1)
    $scaledValue = ApplyScaling $value $equipmentQuality $operatorData.ValueType

    # Log the operator and its scaled value
    Write-Host "Operator: $operator"
    Write-Host "Scaled Value: $scaledValue"

    # Create a new operator node
    $operatorNode = $xml.CreateElement("operator")
    $operatorNode.SetAttribute("type", $operator)
    $operatorNode.SetAttribute("value", $scaledValue)

    # Add the operator node to the operations node
    $operationsNode.AppendChild($operatorNode) > $null

    # Log the edit made to the file
    Write-Host "Operator added: $operator - Value: $scaledValue"
}





# Find all the operations nodes
$operationsNodes = $xml.SelectNodes("//operations")

foreach ($operationsNode in $operationsNodes) {
    # Initialize the set of used operators for this node
    $usedOperators = New-Object System.Collections.Generic.HashSet[string]

    # Add existing operators to the used operators
    foreach ($operator in $operationsNode.ChildNodes) {
        $usedOperators.Add($operator.GetAttribute("type")) > $null
    }

    # Get the equipment's quality level
    $equipmentQuality = $operationsNode.GetAttribute("EQUIPEMENT_QUALITY")
    if ([string]::IsNullOrEmpty($equipmentQuality)) {
        $equipmentQuality = 10  # Default quality level when attribute is not found
    }

    # Add 4 random operators to the current operations node
    for ($i = 0; $i -lt 4; $i++) {
        AddRandomOperator $operationsNode $usedOperators $equipmentQuality
    }
}


# Save the modified XML file
$modifiedFilePath = "Q:\SteamLibrary\steamapps\common\GreedFall\datalocal\items\items_autogen\items_autogen_equipements.sli"
$xml.Save($modifiedFilePath)
Write-Host "XML file modified successfully!"
Write-Host "Modified file saved at: $modifiedFilePath"
